module Game

open "UnityEngine.dll"
open UnityEngine

worldEntity World = {
  Landscapes : [Landscape]
  Jeep : Truck

  rule Landscapes  = 
    let a =
      [for e in Landscapes do
       where e.Checkpoint.isEntered
       select e]
    Debug.Log("a.count before if " + a.Count)
    if a.Count > 0 then
      Debug.Log("a.count " + a.Count)
      let headOfA = a.Head
      let headOfATransform = headOfA.transform
      let headOfAPosition = headOfATransform.position
      yield new Landscape(new Vector3(0.0f,0.0f,headOfAPosition.z - 240.0f)) :: Landscapes

  Create() =
    {
     Jeep = new Truck() 
     Landscapes = [new Landscape(new Vector3(0.0f,0.0f,0.0f));new Landscape(new Vector3(0.0f,0.0f,-80.0f));new Landscape(new Vector3(0.0f,0.0f,-160.0f))]
    }
}

entity Landscape = {
  inherit UnityLandscape
  Zombies	: [Zombie]
  SP : [Transform]
  hasSpawned : bool

  rule Zombies = 
    [for a in Zombies do
	 where (not a.Destroyed)
	 select a]

  rule Zombies, hasSpawned = 
    wait (not hasSpawned)
    let SPHP = SP.Head.position 
    Debug.Log("Pos "+SP.Head.position)
    Debug.Log("LocalPos "+SP.Head.localPosition)
    yield new Zombie(SPHP) :: Zombies, true

  rule Checkpoint.isEntered =
    wait Checkpoint.isEntered
    yield Checkpoint.isEntered
    yield false

  rule SP = 
    [for a in Spawnpoints2 do
	   select a]

  rule SP =
    if SP.Count > 0 then
      yield SP

  Create(StartP : Vector3) = {
  Base = UnityLandscape.Instantiate(StartP)
  Zombies = []
  SP = []
  hasSpawned = false
  }
}

entity Truck = {
   inherit TruckScript

   Velocity : Vector3  

   rule Rotation, Velocity.x =
      //if (Rotation.y > -20.f && Rotation.y < 20.0f) then
        //yield Rotation + Vector3(0.0f, Velocity.x*dt, 0.0f), Velocity.x
      //else
	    //if (Rotation.y > -21.0f) then
        //  yield Rotation, 0.0f
	    //if (Rotation.y < 21.0f) then
          yield Rotation, 0.0f

   rule Velocity = 

      if (Input.GetKey(KeyCode.W)) then								// drive forward
        yield Velocity + Vector3(0.0f, 0.0f, -1.0f)   
		 
      if (Input.GetKey(KeyCode.A) && Velocity.z > 0.0f && Velocity.x > -20.0f) then		// to the left
        yield Velocity + Vector3(-0.2f, 0.0f, 0.0f)

      if (Input.GetKey(KeyCode.D) && Velocity.z > 0.0f && Velocity.x < 20.0f) then		// to the right
        yield Velocity + Vector3(0.2f, 0.0f, 0.0f)

      if (Input.GetKey(KeyCode.Space) && Velocity.z < 2.99f) then	// handbrake when driving forward
        yield Velocity + Vector3(0.0f, 0.0f, 3.0f)

      if (Velocity.z > 0.19f) then									// friction forward
        yield Velocity + Vector3(0.0f, 0.0f, 0.2f)

      if (Velocity.z > -0.19f && Velocity.z < 0.19f) then			// Stop rotating and moving when barely moving
        yield Vector3.zero

      (* when reverse is enabled
      if (Input.GetKey(KeyCode.S)) then								// drive backwards
        yield Velocity + Vector3(0.0f,0.0f, 1.0f)

      if (Input.GetKey(KeyCode.Space) && Velocity.z < 0.0f) then	// handbrake when driving in reverse
        yield Velocity + Vector3(0.0f, 0.0f, -3.0f)

      if (Velocity.z < -0.19f) then									// friction backwards
        yield Velocity + Vector3(0.0f, 0.0f, 0.2f)
      *)
      //Debug.Log("Current Velocity Z" + Velocity.z)
      //Debug.Log("Current Velocity x" + Velocity.x)
   
   rule Position = 
      yield Position + (Velocity * dt)
      

   Create()=
    {
      Velocity = Vector3(0.0f, 0.0f, 0.0f)
      Base = TruckScript.Instantiate()
    }
}
entity Zombie = {
  inherit UnityZombie
  JeepPos : Vector3

  rule Position, speed, Destroyed = 
    if Position = JeepPos then // collision
      yield new Vector3(0.0f,0.0f,0.0f), 0.0f, false
    else // not in range
      yield Position, 1.0f*dt, false

  rule currenta,targeta = Position, JeepPos

  rule Rotation, Destroyed = 
    if Position = JeepPos then
      yield new Quaternion(0.0f,0.0f,0.0f,0.0f), false
    else
      yield Rotation, false

  rule JeepPos = world.Jeep.Position
  
  Create(pos : Vector3) = 
  {
    JeepPos = pos
    UnityZombie = UnityZombie.Instantiate(pos)
  }
}
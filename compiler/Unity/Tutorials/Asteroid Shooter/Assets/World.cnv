module Game

open "UnityEngine.dll"
open UnityEngine

worldEntity World = {

    GameReady       : bool
    CurrentPlayer   : Player
    Asteroids       : [Asteroid]
    SpawnAmount     : float
    PlayerClient    : Client
    GameServer      : Server

    rule GameReady =
        if GameSettings.isHost then 
            let x = GameServer.Host
            Debug.Log(x)
            yield x 
        else
            let a = PlayerClient.Connect
            Debug.Log(a)
            yield a

    rule Asteroids =
        wait SpawnAmount
        let x = Random.Range(-15, 15)
        yield new Asteroid(Vector3(((float)x), 7.0f, -15.0f)) :: Asteroids

    rule SpawnAmount = 
        wait 1.0f
        if SpawnAmount > 0.1f then
            yield SpawnAmount - 0.1f   
        else    
            yield SpawnAmount 

    rule Asteroids =
        [for a in Asteroids do
         where (a.Destroyed = false)
         select a]

    Create()=
    Debug.Log(GameSettings.isHost)
    {
    CurrentPlayer = new Player()
    Asteroids = []
    SpawnAmount = 2.0f
    GameReady = false
    PlayerClient = new Client()
    GameServer = new Server()
    }


}

entity Player = {

    PlayerID : int
    PlayerShip : Ship

    Create()={
    PlayerID = 1
    PlayerShip = new Ship()
    }
}

entity Ship = {
    inherit UnityShip
    
    Projectiles : [Bullet]    
    HP          : PlayerHealth
    HitCounter  : int

    rule Projectiles = 
        wait (Input.GetKeyDown(KeyCode.Space)) 
        yield new Bullet(Position) :: Projectiles
        wait 0.1f    

    rule Position =
       wait (Input.GetKey(KeyCode.A))
       yield Position - Vector3(4.0f*dt, 0.0f, 0.0f)
    
    rule Position =
        wait(Input.GetKey(KeyCode.D))
        yield Position + Vector3(4.0f*dt, 0.0f, 0.0f)

    rule HitCounter, Hit =
        wait Hit
        yield HitCounter + 1, false

    rule HP.FirstLife, HP.SecondLife, HP.ThirdLife =
         if HitCounter = 0 then
            yield true, true, true
         if HitCounter = 1 then
            yield true, true, false
         if HitCounter = 2 then   
            yield true, false, false
         if HitCounter = 3 then
            yield false, false, false

    rule Projectiles = 
          [for p in Projectiles do
           where (p.Destroyed = false)
           select (p)]


    Create()={
    Base = UnityShip.Instantiate(Vector3(0.0f, -2.0f, -15.0f))
    Projectiles = []
    HP = new PlayerHealth(Vector3(-12.0f, 5.0f, -15.0f))
    HitCounter = 0
    }
}

entity Bullet = {
    inherit UnityBullet

    rule Destroyed =
        wait (Impact || ViewPortPoint.y > 1.0f)
        yield true
    
    rule Position = 
       Position + Vector3(0.0f, 5.0f*dt, 0.0f)
    
    Create(pos : Vector3)={
    Base = UnityBullet.Instantiate(pos) 
    }

}

entity Asteroid = {
    inherit UnityAsteroid

    rule Position =     
        yield Position + Vector3(0.0f, -5.0f*dt, 0.0f)
 
    rule Destroyed =
        wait (Hit || ViewPortPoint.y < -0.4f)
        yield true


    Create(pos : Vector3)={
    Base = UnityAsteroid.Instantiate(pos)
    }

}

entity PlayerHealth = {
    inherit UnityPlayerHealth

    Create(pos : Vector3)={
    Base = UnityPlayerHealth.Instantiate(pos)
    }

}

entity Client = {
    inherit UnityGameClient

    Create()={
    Base = UnityGameClient.Find()
    }

}

entity Server = {
    inherit UnityGameServer

    Create()={
    Base = UnityGameServer.Find()
    }

}

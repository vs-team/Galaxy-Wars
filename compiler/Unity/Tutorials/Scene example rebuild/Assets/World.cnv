module Game

open "UnityEngine.dll"
open UnityEngine

open Truck
open Landscape
open Player
open Zombie

worldEntity World = {
  inherit UnityLandscape
  Gasstations : [Gasstation]
  Landscapes : [Landscape]
  Jeep : Option<Truck>
  Zombies : [Zombie] // are created in the landscape in groups
  Gui : [Guibar]
  ActiveBoR : string
  Counter : int  
  Players : [Player]
  Score : int
  W_Refill_Resources : bool
  ZombiegroupDest : Option<ZombieGroupDestroyer>
 
  rule W_Refill_Resources = 
    let j = 
      [for a in Gasstations do
       where a.RepairZonE.Refill_Resources
       select a]
    let t = if j.Count > 0 then true else false
    if t then
      yield true
    else
      yield false

  rule Score = 
    wait Jeep.IsSome
    let x = Jeep.Value.MultiplierBonus
    if (x > 1.1f) then // once in 2 frames. if statement check takes a frame
      yield Score + 1

  rule Score = 
    yield Score + 1

  rule Zombies = 
    let groups = 
      [for a in Gasstations do
       for b in a.GroupZombies do
       select b]
    let zombiegroup = 
      [for a in groups do
       for c in a.ZombieFollowers do
	     select c]
    if zombiegroup.Count > 0 then
      yield zombiegroup @ Zombies

  rule Zombies = 
    let groups = 
      [for a in Landscapes do
       for b in a.Group do
       select b]
    let zombiegroup = 
      [for a in groups do
       for c in a.ZombieFollowers do
	     select c]
    if zombiegroup.Count > 0 then
      yield zombiegroup @ Zombies
  
  rule Zombies = 
    let zmbies = 
      [for a in Zombies do
       where (a.Destroyed = false)
       select a]
    yield zmbies  

  rule ZombiegroupDest, Landscapes = 
    wait 1.0f
    let x = 
      [for a in Landscapes do
       where (Vector3.Distance (a.Position, Jeep.Value.Position) > 400)
       select a]
    if (x.Count > 0) then
      let q = 
        [for a in Landscapes do
         where (Vector3.Distance (a.Position, Jeep.Value.Position) < 400)
         select a]
      let g = x.Head.transform
      let j = new ZombieGroupDestroyer(g.position.z, Jeep.Value.Position)
      yield Some j, q
      wait dt
      yield None, Landscapes
    else
      let z = new ZombieGroupDestroyer(10.0f, Jeep.Value.Position)
      yield Some z, Landscapes
      wait dt
      yield None, Landscapes

  rule ActiveBoR = 
    if ActiveBoR = "Crossed Wrenches Red" then
      let resourcelist = ["Medipack Red";"Battery Black";"Jerry Can Green"]
      let rnd = Random.Range(0,3)
      yield resourcelist.[rnd]
  
  rule ActiveBoR = 
    let a = 
      [for a in Landscapes do
       for b in a.PickUps do
       for c in b.BonusAndResources do
       where c.Active
       select (c.NameOfBoR)]
    if a.Count > 0 then
      yield a.Head
      yield ""

  rule Landscapes, Counter, Gasstations = 
    let ls = 
      [for a in Landscapes do
       select a]
    let gs = 
      [for b in Gasstations do
       select b]
    if (ls.Count > 0) then
      let randr = Random.Range(1,5) 
      if gs.Count > 0 then 
        let Headpos = if (ls.Head.Position.z < gs.Head.Position.z) then ls.Head.Position else gs.Head.Position
        if Counter > 7 then
          yield Landscapes, 0, new Gasstation(new Vector3(0.0f,0.0f, Headpos.z - 80.0f)) :: Gasstations
          wait (Vector3.Distance(Headpos, Jeep.Value.Position) < 200.0f)
        else
          yield (new Landscape(new Vector3(0.0f,0.0f,Headpos.z - 80.0f), randr)) :: Landscapes, Counter + 1, Gasstations
          yield Landscapes, Counter, Gasstations
          wait (Vector3.Distance(Headpos, Jeep.Value.Position) < 200.0f)
      else 
        let Headpos = ls.Head.Position
        if Counter > 7 then
          yield Landscapes, 0, new Gasstation(new Vector3(0.0f,0.0f, Headpos.z - 80.0f)) :: Gasstations
          wait (Vector3.Distance(Headpos, Jeep.Value.Position) < 200.0f)
        else
          yield (new Landscape(new Vector3(0.0f,0.0f,Headpos.z - 80.0f), randr)) :: Landscapes, Counter + 1, Gasstations
          yield Landscapes, Counter, Gasstations
          wait (Vector3.Distance(Headpos, Jeep.Value.Position) < 200.0f)

  Create() =
    let truk = new Truck("zpickup", new Vector3(0.0f,-6.8f,0.0f), false, [4;2;1;3])
    {
     Gasstations = [new Gasstation(new Vector3(0.0f,0.0f, -80.0f))]
     Landscapes = [new Landscape(new Vector3(0.0f,0.0f,-160.0f), 1); new Landscape((Vector3.zero), (2))] 
     Jeep = Some truk
     Zombies = []
     Gui = [new Guibar("HP");new Guibar("Fuel")]
     ActiveBoR = ""
     Counter = 3
     Players = [new Player(1)]
     Score = 0
     W_Refill_Resources = false
     ZombiegroupDest = None
    }
}

entity Guibar = {
  inherit GUIBarScript
  BarType : string

  rule HPValue = 
    if BarType = "HP" then
      yield world.Jeep.Value.CarHP2
    else
      yield (world.Jeep.Value.Fuel / 10000.0f)

  Create(typ : string) = 
  {
    Base = GUIBarScript.Find(typ)
    BarType = typ
  }
}
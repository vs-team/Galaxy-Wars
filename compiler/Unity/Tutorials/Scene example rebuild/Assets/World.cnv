module Game

open "UnityEngine.dll"
open UnityEngine

worldEntity World = {
  inherit UnityLandscape
  Landscapes : [Landscape]
  Jeep : Truck
  Zombies : [Zombie] // are created in the landscape
  Pistols : [Gun]
  Flashs : [Light]
  GUIpanel : GUI
  Health : float

  rule Zombies = 
    let new_zombies = 
      [for a in Landscapes do
       for b in a.Zombies do
	     select b]
    yield new_zombies 
  
  rule Zombies = 
    [for a in Zombies do
     where (a.Life <> 0.0f)
     select a]

  rule Health = 
    yield Health
    wait false

  rule Landscapes = 
    let ls = 
      [for a in Landscapes do
       where a.Checkpoint.isEntered
       select a]
    if ls.Count > 0 then
      let randr = Random.Range(1,5) 
      yield (new Landscape((Jeep.Position), randr)) :: Landscapes
      wait 2.0f

  Create() =
    let randomr = Random.Range(2,4)
    {
     Landscapes = [new Landscape((Vector3.zero), randomr); new Landscape(new Vector3(0.0f,0.0f,-80.0f), (randomr + 1)); new Landscape(new Vector3(0.0f,0.0f,-160.0f), (randomr - 1))]
     Jeep = new Truck()
     Zombies = []
     Pistols = [new Gun()]
     Flashs = [new Light()]
     GUIpanel = new GUI()
     Health = 10.0f
    }
}

entity ControllerRazor= { // one hand
  Position : Vector3
  Forward : Vector3
  Trigger : bool

  rule Trigger = 
    Debug.Log("Trigger value = "+ Trigger)
    if Input.GetMouseButton(0) then
      yield true
      yield false

  Create() = 
  {
    Position = Vector3.zero
    Forward = Vector3.zero
    Trigger = false
  }
}

entity Gun = { //pistol
  GunController : ControllerRazor
  Ammo : int
  Reloading : bool
  ReloadDuration : float

  rule Ammo = 
    Debug.Log("Ammo left = "+ Ammo)
    if GunController.Trigger && Ammo > 0 && (Reloading = false) then
      yield Ammo - 1
      yield Ammo

  rule Reloading, Ammo = 
    if Input.GetKey(KeyCode.R) then
      yield true, Ammo
      wait (ReloadDuration)
      yield false, 20

  rule Reloading = 
    if Input.GetKey(KeyCode.C) then
      yield false

  Create() = 
  {
    GunController = new ControllerRazor()
    Ammo = 80 //amount of bullets
    Reloading = false
    ReloadDuration = 4.0f
  }
}

entity Light = { //flashlight
  LightController : ControllerRazor
  Battery : float
  Active : bool

  rule Active =
    yield LightController.Trigger
    wait false

  rule Battery = 
    if Active && Battery > 0.49f then
      yield Battery - 0.5f
    else
      yield 0.0f

  Create() = 
  {
    LightController = new ControllerRazor()
    Battery = 100.0f
    Active = true
  }
}

entity GUI = { //panel. Each wall contains the same info?
  test : bool

  rule test = 
    yield test
    wait false

  Create() = 
  {
    test = false
  }

}

entity Landscape = { //here are the zombies created and destroyed after a frame
  inherit UnityLandscape
  ref Zombies	: [Zombie]
  Spawnpoints : [Transform]

  rule Zombies, Spawnpoints = 
    wait Spawnpoints.Count > 0
    let random_spawnp = Random.Range(0,4) // Spawnpoint index
    let sps = Spawnpoints.[random_spawnp]
    let sps_pos = sps.position
    let zmbies = [(new Zombie(sps_pos))]
    yield zmbies, []
    yield [], []

  rule Spawnpoints = 
    let sps = //[Transform of each Spawnpoint]
      [for a in Spawnpoints2 do
       select a]
    yield sps
    wait false

  Create(pos : Vector3, ps : int) =
  {
  Base = UnityLandscape.Instantiate(pos, ps)
  Spawnpoints = []
  Zombies = []
  }
}

entity Truck = {
   inherit TruckScript
   DriveEngine : Engine
   Fuel : float
   
   rule Frce = 
     if DriveEngine.Accel > 0.0f && DriveEngine.BrakeAndReverse > 0.0f then
       yield Vector3.zero
     else 
       if DriveEngine.Accel > 0.0f then
         yield new Vector3(0.0f,0.0f,-180.0f * DriveEngine.Accel)
       if DriveEngine.BrakeAndReverse > 0.0f then 
         yield new Vector3(0.0f,0.0f,300.0f * DriveEngine.BrakeAndReverse)

   rule Trque = 
     yield new Vector3(0.0f,40.0f * DriveEngine.Rotation ,0.0f)
     
   rule Fuel = 
     Debug.Log("Fuel amount left = "+ Fuel)
     if world.Jeep.DriveEngine.Active && Fuel > 0.99f then
       yield Fuel - 1.0f
     else
       yield 0.0f

   Create()=
    {
      Base = TruckScript.Instantiate()
      DriveEngine = new Engine()
      Fuel = 40.0f // liters
    }
}

entity Engine = {
    Accel : float // has to be a value between 0.0f and 1.0f
    BrakeAndReverse : float // has to be a value between 0.0f and 1.0f
    Rotation : float
    Active : bool

    Create() = 
	{
      Accel = 0.9f
      BrakeAndReverse = 0.0f
      Rotation = 0.8f
      Active = true
	}
}

entity Zombie = {
  inherit UnityZombie
  Life : float

  rule Destroyed = 
    wait (Life = 0.0f)
    yield true

  rule Life = 
    Debug.Log("Life left = "+ Life)
    if Life > 0.49f then 
      yield Life - 1.5f
    else
	  yield 0.0f

  Create(pos : Vector3) = 
  {
  UnityZombie = UnityZombie.Instantiate(pos)
  Life = 100.0f // healthpoints
  }
}
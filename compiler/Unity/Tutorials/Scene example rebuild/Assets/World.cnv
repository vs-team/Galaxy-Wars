module Game

open "UnityEngine.dll"
open UnityEngine

worldEntity World = {
  inherit UnityLandscape
  Landscapes : [Landscape]
  Jeep : Truck
  Zombies : [Zombie] // are created in the landscape!
  Pistols : [Gun]
  Flashs : [Light]
  GUIpanel : GUI
  Health : float

  rule Zombies = 
    let zombies_let = 
      [for a in Zombies do
	   where (a.life <> 0.0f)
	   select a]
    Debug.Log("Amount of zombies alive = "+zombies_let.Count)
    yield zombies_let

  rule Health = 
    yield Health
    wait false

  Create() =
    {
     Jeep = new Truck()
     Landscapes = [new Landscape(1)]
     Zombies = []
     Pistols = [new Gun()]
     Flashs = [new Light()]
     GUIpanel = new GUI()
     Health = 10.0f
    }
}

entity ControllerRazor= { // one hand
  Position : Vector3
  Forward : Vector3
  Trigger : bool

  rule Trigger = 
    Debug.Log("Trigger value = "+ Trigger)
    if Input.GetMouseButton(0) then
      yield true
      yield false

  Create() = 
  {
    Position = Vector3.zero
    Forward = Vector3.zero
    Trigger = false
  }
}

entity Gun = { //pistol
  GunController : ControllerRazor
  Ammo : int
  Reloading : bool
  ReloadDuration : float

  rule Ammo = 
    Debug.Log("Ammo left = "+ Ammo)
    if GunController.Trigger && Ammo > 0 && (Reloading = false) then
      yield Ammo - 1
      yield Ammo

  rule Reloading, Ammo = 
    if Input.GetButton("R") then
      yield true, Ammo
      wait (ReloadDuration)
      yield false, 20

  rule Reloading = 
    if Input.GetButton("C") then
      yield false

  Create() = 
  {
    GunController = new ControllerRazor()
    Ammo = 80 //amount of bullets
    Reloading = false
    ReloadDuration = 4.0f
  }
}

entity Light = { //flashlight
  LightController : ControllerRazor
  Battery : float
  Active : bool

  rule Active =
    yield LightController.Trigger
    wait false

  rule Battery = 
    if Active && Battery > 0.49f then
      yield Battery - 0.5f
    else
      yield 0.0f

  Create() = 
  {
    LightController = new ControllerRazor()
    Battery = 100.0f
    Active = true
  }
}

entity GUI = { //panel. Each wall contains the same info?
  test : bool

  rule test = 
    yield test
    wait false

  Create() = 
  {
    test = false
  }

}

entity Landscape = { //here are the zombies created and destroyed after a frame
  inherit UnityLandscape
  ref Zombies	: [Zombie]
  Spawnpoints : [Transform] // tuple? transform * int?

  rule Zombies = 
    wait Spawnpoints.Count > 0
    let sps_head = Spawnpoints.Head
    let sps_pos = sps_head.position
    let zmbies = [new Zombie(sps_pos)]
    yield zmbies
    wait false

  rule Spawnpoints = 
    let sps_name = //[Spawnpoint1;Spawnpoint2;Spawnpoint3;Spawnpoint4]
      [for a in Spawnpoints2 do
       select a.name] 
    let sps_number = // [1;2;3;4]
      [for a in sps_name do
       select (a.Substring(10,1))]
    Debug.Log("spsnumberhead = "+sps_number.Head)

    let sps = //[Transform of each Spawnpoint]
      [for a in Spawnpoints2 do
       select a]
    //let tuple_sps =
      //[for a in sps_number do
       //for b in sps do
       //select (a,b)]
    
    yield sps
    wait false

  Create(amountofzombies : int) = // order of execution? First instantiate, then assign spawnpoints
  let pos = Vector3.zero
  {
  Base = UnityLandscape.Instantiate(pos)
  Spawnpoints = []
  Zombies = []
  }
}

entity Truck = {
   inherit TruckScript
   DriveEngine : Engine
   fuel : float
     
   rule fuel = 
     Debug.Log("Fuel amount left = "+fuel)
     if world.Jeep.DriveEngine.active && fuel > 0.99f then
       yield fuel - 1.0f
     else
       yield 0.0f

   Create()=
    {
      DriveEngine = new Engine()
      fuel = 40.0f // liters
    }
}

entity Engine = {
    accel : float // has to be a value between 0.0f and 1.0f
    BrakeAndReverse : float // has to be a value between 0.0f and 1.0f
    rotation : Vector3
    active : bool

    Create() = 
	{
      accel = 0.0f
      BrakeAndReverse = 0.0f
      rotation = Vector3.zero
      active = true
	}
}

entity Zombie = {
  inherit UnityZombie
  life : float

  rule Destroyed = 
    wait (life = 0.0f)
    yield true

  rule life = 
    Debug.Log("Life left = "+ life)
    if life > 0.49f then 
      yield life - 1.5f
    else
	  yield 0.0f

  Create(pos : Vector3) = 
  {
  UnityZombie = UnityZombie.Instantiate(pos)
  life = 100.0f // healthpoints
  }
}